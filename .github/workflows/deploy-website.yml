name: Deploy Website
on:
  workflow_dispatch:
  push:
    branches: [main]
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

#Â Key Generation: https://www.plesk.com/kb/support/how-to-set-up-ssh-keys-for-plesk-server/
# As local subscription user (not root), generate a key pair, using:
# ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa_deployment
# As defined in /etc/ssh/sshd_config on AuthorizedKeysFile, the key need to be present in ~/.ssh/authorized_keys
# /.ssh/id_rsa_deployment.pub > ~/.ssh/authorized_keys
# use the private key in the secret SCP_KEY
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install dependencies
        run: npm ci
        working-directory: website
      - name: Build website
        run: npm run build
        working-directory: website
      - name: Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: website
          path: website/out
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Setup SSH
        run: |
          mkdir ~/.ssh
          echo -e "${{ secrets.SCP_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SCP_HOST }} >> ~/.ssh/known_hosts
          ssh ${{ secrets.SCP_USERNAME }}@${{ secrets.SCP_HOST }} "echo 'SSH connection established'" || exit 1
      - name: Download bundle
        uses: actions/download-artifact@v4
        with:
          name: website
          path: website
      - name: Deploy website
        run: scp -r website ${{ secrets.SCP_USERNAME }}@${{ secrets.SCP_HOST }}:${{ secrets.REMOTE_PATH }}
